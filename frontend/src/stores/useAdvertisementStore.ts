import { create } from "zustand";
import {axiosInstance} from "@/lib/axios";
import { IAdvertisement } from "@/types";

interface AdvertisementState {
  advertisements: IAdvertisement[]; // Danh s√°ch qu·∫£ng c√°o active cho ng∆∞·ªùi d√πng
  allAdvertisements: IAdvertisement[]; // Danh s√°ch t·∫•t c·∫£ qu·∫£ng c√°o (Admin)
  loading: boolean;
  error: string | null;

  getActiveAdvertisements: () => Promise<void>; // L·∫•y qu·∫£ng c√°o active
  getAllAdvertisements: (page?: number, limit?: number) => Promise<void>; // L·∫•y t·∫•t c·∫£ qu·∫£ng c√°o (Admin)
  createAdvertisement: (data: Omit<IAdvertisement, "_id" | "createdAt" | "updatedAt">) => Promise<void>;
  deleteAdvertisement: (advertisementId: string) => Promise<void>;
}

export const useAdvertisementStore = create<AdvertisementState>((set) => ({
  advertisements: [],
  allAdvertisements: [],
  loading: false,
  error: null,

  // üìå L·∫•y danh s√°ch qu·∫£ng c√°o ƒëang ho·∫°t ƒë·ªông (cho User Free)
  getActiveAdvertisements: async () => {
    set({ loading: true, error: null });
    try {
      const response = await axiosInstance.get(`/api/advertisements/active`);
      set({ advertisements: response.data.ads });
    } catch (error: any) {
      set({ error: error.message || "L·ªói khi l·∫•y danh s√°ch qu·∫£ng c√°o active" });
    } finally {
      set({ loading: false });
    }
  },

  // üìå L·∫•y t·∫•t c·∫£ qu·∫£ng c√°o (Admin)
  getAllAdvertisements: async (page = 1, limit = 10) => {
    set({ loading: true, error: null });
    try {
      const response = await axiosInstance.get(`/api/admin/advertisements`, { params: { page, limit } });
      set({ allAdvertisements: response.data.ads });
    } catch (error: any) {
      set({ error: error.message || "L·ªói khi l·∫•y danh s√°ch qu·∫£ng c√°o (Admin)" });
    } finally {
      set({ loading: false });
    }
  },

  // üìå T·∫°o qu·∫£ng c√°o m·ªõi (ch·ªâ Admin)
  createAdvertisement: async (data) => {
    set({ loading: true, error: null });
    try {
      await axiosInstance.post(`/api/admin/advertisements`, data);
      await useAdvertisementStore.getState().getAllAdvertisements(); // Refresh danh s√°ch qu·∫£ng c√°o
    } catch (error: any) {
      set({ error: error.message || "L·ªói khi t·∫°o qu·∫£ng c√°o" });
    } finally {
      set({ loading: false });
    }
  },

  // üìå X√≥a qu·∫£ng c√°o (ch·ªâ Admin)
  deleteAdvertisement: async (advertisementId) => {
    set({ loading: true, error: null });
    try {
      await axiosInstance.delete(`/api/admin/advertisements/${advertisementId}`);
      await useAdvertisementStore.getState().getAllAdvertisements(); // Refresh danh s√°ch qu·∫£ng c√°o
    } catch (error: any) {
      set({ error: error.message || "L·ªói khi x√≥a qu·∫£ng c√°o" });
    } finally {
      set({ loading: false });
    }
  },
}));
